openapi: 3.0.3
info:
  title: SAUSC
  version: 1.0.0
  description: SAUSC API
servers:
  - url: http://localhost:8080


paths:
  /api/v1/activity:
    post:
      tags:
        - activity
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityForm'
      description: Create an activity.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityDto'
        '400':
          description: Bad request
        '404':
          description: Not found
        '500':
          description: Server error

  /api/v1/activity/{activityId}:
    get:
      tags:
        - activity
      parameters:
        - name: activityId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      description: Get activity.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityDto'
        '400':
          description: Bad request
        '404':
          description: Not found
        '500':
          description: Server error
    put:
      tags:
        - activity
      parameters:
        - name: activityId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityForm'
      description: Update activity.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityDto'
        '400':
          description: Bad request
        '404':
          description: Not found
        '500':
          description: Server error
    delete:
      tags:
        - activity
      parameters:
        - name: activityId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      description: Delete activity.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad request
        '404':
          description: Not found
        '500':
          description: Server error

  /api/v1/activity/{activityId}/equipment:
    post:
      tags:
        - activity-equipment
      parameters:
        - name: activityId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EquipmentForm'
      description: Create an equipment.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EquipmentDto'
        '400':
          description: Bad request
        '404':
          description: Not found
        '500':
          description: Server error

  /api/v1/activity/{activityId}/equipment/{equipmentId}:
    get:
      tags:
        - activity-equipment
      parameters:
        - name: activityId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: equipmentId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      description: Update an equipment.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EquipmentDto'
        '400':
          description: Bad request
        '404':
          description: Not found
        '500':
          description: Server error
    put:
      tags:
        - activity-equipment
      parameters:
        - name: activityId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: equipmentId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EquipmentForm'
      description: Update an equipment.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EquipmentDto'
        '400':
          description: Bad request
        '404':
          description: Not found
        '500':
          description: Server error
    delete:
      tags:
        - activity-equipment
      parameters:
        - name: activityId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: equipmentId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      description: Delete equipment.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad request
        '404':
          description: Not found
        '500':
          description: Server error

  /api/v1/activity/{activityId}/equipment/list:
    get:
      tags:
        - activity-equipment
      parameters:
        - name: activityId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      description: Get equipment list for activity.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEquipmentDto'
        '400':
          description: Bad request
        '404':
          description: Not found
        '500':
          description: Server error

  /api/v1/activities:
    post:
      tags:
        - activity
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivitySearchRequestDto'
      description: Search activities.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListActivitySearchResponseDto'
        '400':
          description: Bad request
        '404':
          description: Not found
        '500':
          description: Server error

  /api/v1/reservation:
    post:
      tags:
        - reservation
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationForm'
      description: Create reservation.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationDto'
        '400':
          description: Bad request
        '404':
          description: Not found
        '500':
          description: Server error

  /api/v1/reservation/available-start-times:
    post:
      tags:
        - reservation
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationAvailableStartTimesRequestDto'
      description: Get possible reservation start times.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationAvailableTimesResponseDto'
        '400':
          description: Bad request
        '404':
          description: Not found
        '500':
          description: Server error

  /api/v1/reservation/available-end-times:
    post:
      tags:
        - reservation
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationAvailableEndTimesRequestDto'
      description: Get possible reservation end times.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationAvailableTimesResponseDto'
        '400':
          description: Bad request
        '404':
          description: Not found
        '500':
          description: Server error

  /api/v1/reservations/{userId}:
    get:
      tags:
        - reservation
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      description: Get all reservations for user.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListReservationDto'
        '400':
          description: Bad request
        '404':
          description: Not found
        '500':
          description: Server error

  /api/v1/reservations:
    post:
      tags:
        - reservation
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationsRequestDto'
      description: Get reservations.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListReservationDto'
        '400':
          description: Bad request
        '404':
          description: Not found
        '500':
          description: Server error

  /api/v1/status:
    post:
      tags:
        - status
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatusForm'
      description: Create new status.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusDto'
        '400':
          description: Bad request
        '404':
          description: Not found
        '500':
          description: Server error

  /api/v1/status/{statusId}:
    get:
      tags:
        - status
      parameters:
        - name: statusId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      description: Get status by statusId.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusDto'
        '400':
          description: Bad request
        '404':
          description: Not found
        '500':
          description: Server error

    put:
      tags:
        - status
      parameters:
        - name: statusId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatusForm'
      description: Update status.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusDto'
        '400':
          description: Bad request
        '404':
          description: Not found
        '500':
          description: Server error

    delete:
      tags:
        - status
      parameters:
        - name: statusId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      description: Delete status.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad request
        '404':
          description: Not found
        '500':
          description: Server error

  /api/v1/statuses:
    get:
      tags:
        - status
      description: Get all statuses.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListStatusDto'
        '400':
          description: Bad request
        '404':
          description: Not found
        '500':
          description: Server error

components:
  schemas:
    ActivityForm:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        pricePerHour:
          type: number
          format: double
        idUser:
          type: integer
          format: int64

    ActivityDto:
      type: object
      properties:
        idActivity:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        pricePerHour:
          type: number
          format: double
        userInfo:
          $ref: '#/components/schemas/UserInfoDto'

    UserInfoDto:
      type: object
      properties:
        idUser:
          type: integer
          format: int64
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string

    ActivitySearchRequestDto:
      type: object
      properties:
        name:
          type: string

    ListActivitySearchResponseDto:
      type: object
      properties:
        activities:
          type: array
          items:
            $ref: '#/components/schemas/ActivityDto'

    EquipmentForm:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        quantity:
          type: integer

    EquipmentDto:
      type: object
      properties:
        idEquipment:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        quantity:
          type: integer

    ListEquipmentDto:
      type: object
      properties:
        equipmentList:
          type: array
          items:
            $ref: '#/components/schemas/EquipmentDto'

    ReservationForm:
      type: object
      properties:
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        numberOfParticipants:
          type: integer
        sportsCenterMemberId:
          type: integer
          format: int64
        idActivity:
          type: integer
          format: int64
        statusId:
          type: integer
          format: int64

    ReservationDto:
      type: object
      properties:
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        numberOfParticipants:
          type: integer
        reservationPrice:
          type: number
          format: double
        sportsCenterMember:
          $ref: '#/components/schemas/UserInfoDto'
        activity:
          $ref: '#/components/schemas/ActivityDto'
        status:
          $ref: '#/components/schemas/StatusDto'

    StatusDto:
     type: object
     properties:
       idStatus:
         type: integer
         format: int64
       name:
         type: string
       abbreviation:
         type: string

    StatusForm:
      type: object
      properties:
        name:
          type: string
        abbreviation:
          type: string

    ListStatusDto:
      type: object
      properties:
        statuses:
          type: array
          items:
            $ref: '#/components/schemas/StatusDto'

    ListReservationDto:
      type: object
      properties:
        reservations:
          type: array
          items:
            $ref: '#/components/schemas/ReservationDto'

    ReservationsRequestDto:
      type: object
      properties:
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time

    ReservationAvailableStartTimesRequestDto:
      type: object
      properties:
        idActivity:
          type: integer
          format: int64
        date:
          type: string
          format: date

    ReservationAvailableTimesResponseDto:
      type: object
      properties:
        possibleTimes:
          type: array
          items:
            type: string
            format: time

    ReservationAvailableEndTimesRequestDto:
      type: object
      properties:
        idActivity:
          type: integer
          format: int64
        startDate:
          type: string
          format: date
        startTime:
          type: string
          format: time





